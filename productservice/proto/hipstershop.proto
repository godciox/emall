// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package hipstershop;
option go_package = "./proto;hipstershop";

// -----------------Cart service-----------------

service CartService {
  rpc AddItem(AddItemRequest) returns (Empty) {}
  rpc GetCart(GetCartRequest) returns (Cart) {}
  rpc EmptyCart(EmptyCartRequest) returns (Empty) {}
}

message CartItem {
  int64 product_id = 1;
  int64  quantity = 2;
}

message AddItemRequest {
  string user_id = 1;
  CartItem item = 2;
}

message EmptyCartRequest {
  string user_id = 1;
}

message GetCartRequest {
  string user_id = 1;
}

message Cart {
  string user_id = 1;
  repeated CartItem items = 2;
}

message Empty {}


// ---------------Product Catalog----------------

service ProductCatalogService {
  rpc ListProductsByBrand(ListProductsRequest) returns (ListProductsResponse) {}
  rpc ListProductsByProductCategory(ListProductsRequest) returns (ListProductsResponse) {}
  rpc GetProduct(GetProductRequest) returns (GetProductResponse) {}
  rpc SearchProducts(SearchProductsRequest) returns (SearchProductsResponse) {}
  rpc InsertProducts(InsertProductsRequest) returns (InsertProductsResponse) {}
  rpc OperateProducts(OperateProductsRequest) returns (OperateProductsResponse) {}
  rpc InsertCategory(InsertCategoryRequest) returns (InsertCategoryResponse) {}
  rpc GetCategory(CategoryRequest) returns (CategoryResponse) {}
  rpc DeleteCategory(CategoryRequest) returns (CategoryResponse) {}
  rpc ChangeCategory(InsertCategoryRequest) returns (InsertCategoryResponse) {}
  rpc GetProductImage(GetImageRequest) returns (GetImageResponse) {}
  rpc InsertProductImage(ImageRequest) returns (ImageResponse) {}
  rpc ChangeProductImage(ImageRequest) returns (ImageResponse) {}
  rpc DeleteProductImage(DeleteImageRequest) returns (ImageResponse) {}
  rpc GetBrand(GetBrandRequest) returns (GetBrandResponse) {}
  rpc InsertBrand(BrandRequest) returns (BrandResponse) {}
  rpc ChangeBrand(BrandRequest) returns (BrandResponse) {}
  rpc DeleteBrand(DeleteBrandRequest) returns (BrandResponse) {}
}

message ListProductsRequest {
  int64 category_id = 1;
  int64 brand_id = 2;
  int32 page = 3;
}

message ListProductsResponse {
  string status = 1;
  string description = 2;
  repeated Product products = 3;
}

message ProductImage {
  string title = 1;
  int64 product_id = 2;
  string source_img = 3;
  string thumbnail = 4;
  int64 id = 5;
}

message Brand {
  string name = 1;
  string logo_img_path = 2;
  int64  product_categories_id = 3;
  int64 id = 4;
}

message  GetImageRequest {
  int64 product_id = 1;
}

message GetImageResponse {
  ImageResponse rsp = 1;
  repeated ProductImage images = 2;
}

message ImageRequest {
  string creator = 1;
  repeated ProductImage images = 2;
}

message ImageResponse {
  string status = 1;
  string description = 2;
}

message DeleteImageRequest {
  int64 product_id = 1;
  string title = 2;
}

message  GetBrandRequest {
  int64 brand_id = 1;
  int64 category_id = 2;
}

message GetBrandResponse {
  BrandResponse rsp = 1;
  repeated Brand brandInfo = 2;
}

message BrandRequest {
  string creator = 1;
  repeated Brand brands = 2;
}

message BrandResponse {
  string status = 1;
  string description = 2;
}

message DeleteBrandRequest {
  int64 id = 1;
  string name = 2;
}

message OperateProductsRequest {
  int32 delete_flag = 1; // 0 代表修改， 1 代表删除
  repeated Product products = 2;
}

message OperateProductsResponse {
  string status = 1;
  string description = 2;
}

message CategoryRequest {
  int32 grade = 1;
  int64 id = 2;
  int64 parent_id = 3;
  string name = 4;
  int32 page = 5;
}

message CategoryResponse {
  string status = 1;
  string description = 2;
  repeated Category categorys = 3;
}

message Category {
  string name = 1;
  string seo_title = 2;
  string seo_keywords = 3;
  string seo_description = 4;
  string tree_path = 5;
  int32 grade = 6;
  string  image = 7;
  int64 parent_id = 8;
  int64 id = 9;
}

message InsertCategoryRequest {
  repeated Category categorys = 1;
  string creator = 2;
}

message InsertCategoryResponse {
  string status = 1;
  string description = 2;
}

message InsertProductsRequest {
  string creator = 1;
  repeated Product products = 2;
}

message InsertProductsResponse {
  string status = 1;
  string description = 2;
}

message Product {
  string id = 1;
  string name = 2;
  string introduction = 3;
  string picture = 4;
  float price = 5;
  string sn = 6;

  string seo_title = 8;
  string seo_keywords = 9;
  string seo_description = 10;
  int64 brand_id = 13;
  int64 product_category_id = 14;
  float score = 11;
  repeated string attribute = 12;
}


message GetProductRequest {
  int64 id = 1;
}

message GetProductResponse {
  string status = 1;
  string description = 2;
  Product product = 3;
}

message SearchProductsRequest {
  string query = 1;
  int32 page = 2;
}

message SearchProductsResponse {
  string status = 1;
  string description = 2;
  repeated Product results = 3;
}

// ---------------Shipping Service----------

service ShippingService {
  rpc GetQuote(GetQuoteRequest) returns (GetQuoteResponse) {}
  rpc ShipOrder(ShipOrderRequest) returns (ShipOrderResponse) {}
}

message GetQuoteRequest {
  string address = 1;
  repeated CartItem items = 2;
}

message GetQuoteResponse {
  int64 cost_usd = 1;
}

message ShipOrderRequest {
  string address = 1;
  repeated CartItem items = 2;
}

message ShipOrderResponse {
  string tracking_id = 1;
}




// -------------Payment service-----------------

service PaymentService {
  rpc Charge(ChargeRequest) returns (ChargeResponse) {}
}

message CreditCardInfo {
  string credit_card_number = 1;
  int32 credit_card_cvv = 2;
  int32 credit_card_expiration_year = 3;
  int32 credit_card_expiration_month = 4;
}

message ChargeRequest {
  int64 amount = 1;
  CreditCardInfo credit_card = 2;
}

message ChargeResponse {
  string transaction_id = 1;
}

// -------------Email service-----------------

service EmailService {
  rpc SendOrderConfirmation(SendOrderConfirmationRequest) returns (Empty) {}
}

message OrderItem {
  CartItem item = 1;
  int64 cost = 2;
}



message SendOrderConfirmationRequest {
  string email = 1;
  OrderResult order = 2;
}


// -------------Checkout service-----------------

service OrderService {
  rpc PlaceOrder(PlaceOrderRequest) returns (PlaceOrderResponse) {}
  rpc CheckAllOrderToUser(CheckOrderRequest) returns (CheckOrderResponse) {}
  rpc CheckOrderToUserByStatus(CheckOrderRequest) returns (CheckOrderResponse) {}
  rpc CheckOrderToUserByDate(CheckOrderRequest) returns (CheckOrderResponse) {}
  rpc ChangeStateOfOrder(ChangeOrderStateRequest) returns (ChangeOrderStateResponse) {}
}

message ChangeOrderStateRequest {
  string   sn = 1;
  int64   order_state = 2;
}

message ChangeOrderStateResponse {
  string state = 1;
  string description = 2;
}

message Time {
  string day = 1;
  string month = 2;
  string year = 3;
}

message OrderResult {
  int64   order_id = 1;
  string sn = 8;
  string   shipping_tracking_id = 2;
  int64 shipping_cost = 3;
  string  shipping_address = 4;
  repeated OrderItem items = 5;
  string status = 6;
  string descripiton = 7;
}

message CheckOrderRequest {
  int64 user_id = 1;
  Time  time_start = 2;
  Time  time_end = 3;
  int64 state = 4; // 0 1 2 3 4 代表待付款，代发货，待收货，待评价，退款/售后
}

message CheckOrderResponse {
  repeated OrderResult resList = 1;
}

message PlaceOrderRequest {
  int64 user_id = 1;

  string address = 3;

  string phone = 5;

  string coupon_codeID = 6;

  float coupon_discount = 7;

  string  consignee = 8;


  repeated OrderItem order_item_id = 16;


}


message PlaceOrderResponse {
  OrderResult order = 1;
}

// ------------Ad service------------------

service AdService {
  rpc GetAds(AdRequest) returns (AdResponse) {}
}

message AdRequest {
  // List of important key words from the current page describing the context.
  repeated string context_keys = 1;
}

message AdResponse {
  repeated Ad ads = 1;
}

message Ad {
  // url to redirect to when an ad is clicked.
  string redirect_url = 1;

  // short advertisement text to display.
  string text = 2;
}

// ------------User service------------------

service UserService {
  rpc GetUser(User) returns (User) {}
  rpc GetUserByPhone(User) returns (User) {}
  rpc RegisterUser(User) returns (UserResponse) {}
  rpc ChangePasswordToUser(User) returns (UserResponse) {}
  rpc CheckPasswordToUser(User) returns (UserResponse) {}
  rpc ChangeInfoToUser(User) returns (UserResponse) {}
  rpc UnregisterUser(User) returns (UserResponse) {}
  rpc LoginByMobile(User) returns (UserResponse) {}
  rpc CheckUserIsExisted(User) returns (UserResponse) {}
}

message date {
  string time = 1;
}

message User {
  // user的 id
  int64 id = 1;
  // user地址， 注册就要填
  string address = 2 ;
  // password 这里的password是哈希过的，不能直接填
  string password = 3 ;
  // 手机号
  string mobile = 4;
  // 头像地址
  string avatar = 5;
  // 名字
  string name = 6;
  // 用户名
  string username = 7;
  // 邮箱
  string email = 8;
  // 日期
  date birth = 9;
  // 操作描述
  UserResponse response = 10;
  // gender
  int32 gender = 11;
}

message UserResponse {
  // 100 成功， 500 是失败
  string status = 1;
  string description = 2;
}

// ------------Inventory service------------------

service InventoryService {
  rpc AdjustInventory(InventoryRequest) returns (InventoryResponse) {}
  rpc InsertInventory(InsertInventoryRequest) returns (InsertInventoryResponse) {}
}

message InsertInventoryRequest {
  int64 product_id = 1;
  float price = 2;
  int64 stock = 3;
}

message InsertInventoryResponse {
  string status = 1;
  string description = 2;
}

message InventoryRequestItem {
  int64 product_id = 1;
  int64 quantity = 2;
}

message InventoryRequest {
  repeated InventoryRequestItem product_list = 1;
  bool tag = 2;
}

message InventoryResponseItem {
  bool is_operate_succeed = 1; //true是成功，false是失败
  string description = 2;
  int64 product_id = 3;
}

message InventoryResponse {
  repeated InventoryResponseItem response_list = 1;
  int64 status = 2; // 0 失败，1成功
  string description = 3;
}